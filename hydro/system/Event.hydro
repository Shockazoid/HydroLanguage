//
//                 __  __            __           
//                / / / /__  __ ____/ /_____ ____ 
//               / /_/ // / / // __  // ___// __ \
//              / __  // /_/ // /_/ // /   / /_/ /
//             /_/ /_/ \__, / \__,_//_/    \____/ 
//                    /____/                      
//
//              The Hydro Programming Language
//

package system

/**
 * @docs The `Event` event is the base event type.
 */
public native event Event
{

	/**
	 * Fired when an object is initialized.
     */
	etype Init

	/**
	 * Fired when an operation completes.
     */
	etype Complete

	/**
	 * Fired when the application is activated by the user.
     */
	etype Activate

	/**
	 * Fired when the application is deactivated by the user.
     */
	etype Deactivate

    /**
     * Specifies whether or not halting propagation at the target bubble or capture phases has been requested.
     */
    private readonly param haltPropagationRequested = false
    
    /**
     * Specifies whether or not halting propagation at the current phase has been requested.
     */
    private readonly param haltImmediatePropagationRequested = false
    
    /**
     * The event target.
     */
    public readonly param target : Object
    
    /**
     * Specifies this event should bubble up to parent container.
     */
    public readonly param bubbles : bool = false
    
    /**
     * Specifies whether or not the event is cancelable via preventDefault().
     */
    public param cancelable : bool = false
    
    /**
     * Prevents the default behavior for the current event.
     */
    func preventDefault()
    {
        preventDefaultRequested = true
    }
    
    /**
     * Requests a halt of propagation at the event's bubble and capture phases.
     */
    func stopPropagation()
    {
        haltPropagationRequested = true
    }
    
    /**
     * Requests a halt of propagation at the event's target phase.
     */
    func stopImmediatePropagation()
    {
        haltImmediatePropagationRequested = true
    }
    
    /**
     * Formats the event to a string.
     */
    func formatToString()
    {
        return @"[Event type={type} bubbles={bubbles} cancelable={cancelable}]"
    }
    
}
