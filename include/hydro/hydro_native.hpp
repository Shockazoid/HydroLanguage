//
//                 __  __            __           
//                / / / /__  __ ____/ /_____ ____ 
//               / /_/ // / / // __  // ___// __ \
//              / __  // /_/ // /_/ // /   / /_/ /
//             /_/ /_/ \__, / \__,_//_/    \____/ 
//                    /____/                      
//
//              The Hydro Programming Language
//

namespace hydro
{

#ifndef HYDRO_NATIVE_LIB
#define HYDRO_NATIVE_LIB

const int hydro_script_size = 42;

const char **hydro_script_data = new const char*[42]{"//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic final native class EventType < Object\n{\n    \n    public prop value : string\n    {\n        [get]\n    }\n    \n    public meth toString() : string\n    {\n        return @\"[etype {this.value}]\"\n    }\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic native final class Json < Object\n{\n    \n    public native constructor(value = null)\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\nimport system\n\npublic final native class Setter < Object\n{\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic native class Thread < Object\n{\n    \n    public native constructor()\n    \n    //public native meth run()\n\n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic native func eval(hydroCode : string, scope : string = \"\") : *\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic abstract native element Element < Object\n{\n    public prop name : String\n    {\n        [get]\n        [set]\n    }\n    \n    public native prop id : String\n    {\n        [get]\n        [set]\n    }\n    \n    public native prop parent : Element\n    {\n        [get]\n    }\n    \n    public native prop numChildren : uint\n    {\n        [get]\n    }\n    \n    public native constructor()\n    \n    public native meth appendChild(child : Element)\n    \n    public native meth appendChildAt(child : Element, index : uint)\n    \n    public native meth prependChild(child : Element)\n    \n    public native meth removeChild(child : Element)\n    \n    public native meth removeAllChildren()\n    \n    public native meth getElementByID(id : String)\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\nimport system\n\npublic final native class Getter < Object\n{\n    \n}\n\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic native func print(value)\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic final native class Date < Object\n{\n    \n    public native constructor(value = null)\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\nimport system\n\npublic final native class Constructor < Object\n{\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\n/**\n * @docs The `Event` event is the base event type.\n */\npublic native event Event\n{\n\n	/**\n	 * Fired when an object is initialized.\n     */\n	etype Init\n\n	/**\n	 * Fired when an operation completes.\n     */\n	etype Complete\n\n	/**\n	 * Fired when the application is activated by the user.\n     */\n	etype Activate\n\n	/**\n	 * Fired when the application is deactivated by the user.\n     */\n	etype Deactivate\n\n    /**\n     * Specifies whether or not halting propagation at the target bubble or capture phases has been requested.\n     */\n    private readonly param haltPropagationRequested = false\n    \n    /**\n     * Specifies whether or not halting propagation at the current phase has been requested.\n     */\n    private readonly param haltImmediatePropagationRequested = false\n    \n    /**\n     * The event target.\n     */\n    public readonly param target : Object\n    \n    /**\n     * Specifies this event should bubble up to parent container.\n     */\n    public readonly param bubbles : bool = false\n    \n    /**\n     * Specifies whether or not the event is cancelable via preventDefault().\n     */\n    public param cancelable : bool = false\n    \n    /**\n     * Prevents the default behavior for the current event.\n     */\n    func preventDefault()\n    {\n        preventDefaultRequested = true\n    }\n    \n    /**\n     * Requests a halt of propagation at the event's bubble and capture phases.\n     */\n    func stopPropagation()\n    {\n        haltPropagationRequested = true\n    }\n    \n    /**\n     * Requests a halt of propagation at the event's target phase.\n     */\n    func stopImmediatePropagation()\n    {\n        haltImmediatePropagationRequested = true\n    }\n    \n    /**\n     * Formats the event to a string.\n     */\n    func formatToString()\n    {\n        return @\"[Event type={type} bubbles={bubbles} cancelable={cancelable}]\"\n    }\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic native class Error < Object\n{\n    \n    public native prop message : string\n    {\n        [get]\n    }\n    \n    public native prop code : int\n    {\n        [get]\n    }\n    \n    public native constructor(message : string = \"\", code : int = 0)\n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\nimport system\n\npublic final native class Property < Object\n{\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic native func delay(ms : int)\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npublic plug EventTarget\n{\n    \n    private prop _eventListeners : List = []\n    \n    public meth addEventListener(type, handler : Action, useCapture : bool = false)\n    {\n        if !hasEventListener(type, handler)\n        {\n            // push event listener\n            _eventListeners.push({type:type, handler:handler, useCapture:useCapture})\n        }\n    }\n    \n    public meth removeEventListener(type, handler : Action = null, useCapture : bool = false)\n    {\n        var tmp = []\n        \n        foreach var listener : _eventListeners\n        {\n            if listener.type != type && (!handler || (listener.handler == handler && listener.useCapture == useCapture))\n            {\n                // copy\n                tmp.push(listener)\n            }\n        }\n        \n        _eventListeners = tmp\n    }\n    \n    public meth removeAllEventListeners()\n    {\n        _eventListeners = []\n    }\n    \n    public act fireEvent[Event]\n    {\n        var n = _eventListeners.size\n        \n        for var i = 0; i < n; i++\n        {\n            var listener @ = _eventListeners\n            \n            if var action : Action = listener.handler // try cast\n            {\n                action.fireEvent(Event)\n            }\n        }\n    }\n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic dynamic native class Object\n{\n    \n    public native constructor()\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic final native class AppContext < Object\n{\n    \n    public native constructor(parent : AppContext = null)\n\n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic final native class Function < Object\n{\n	\n	public native prop arity : uint\n	{\n		[get]\n	}\n    \n	public prop length : uint\n	{\n		[get]\n		{\n			return arity // alias\n		}\n	}\n    \n	public native meth call(thisObject : Object = null, args : List = null) : *\n    \n	public meth apply(thisObject : Object = null, ...args) : *\n	{\n		return call(thisObject, args)\n	}\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic native func exit(status : int = 0)\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic native func cmd(command : string) : int\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic native func newInstance(qualifiedClassName : string, args : List)", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic final native class Action < Object\n{\n    \n	public native meth trigger(thisObject : Object = null, params : Object = null, contextTarget : Context = null)\n\n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic class RuntimeError < Error\n{\n\n	public constructor(text : string = \"\", code : int = 0)\n	{\n	    super(text, code)\n	}\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic final native class Enum < Object\n{\n\n    public native prop values : List\n    {\n        [get]\n    }\n    \n    public native prop size : uint16\n    {\n        [get]\n    }\n\n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic final native class List < Object\n{\n\n    public native prop length\n    {\n	    [get]\n	    [set]\n    }\n\n    public native constructor()\n\n    public native meth push(element)\n\n    public native meth pop()\n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\nimport system\n\npublic final native class Method < Object\n{\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic native class Context\n{\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic native dynamic final class EventContext\n{\n\n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\n/**\n *\n */\npublic final native class String < Object\n{\n\n	public native prop length : uint32\n	{\n		[get]\n	}\n\n	public native prop empty : bool\n	{\n		[get]\n	}\n	\n	public native constructor(value = \"\")\n\n	public native meth substr(start : uint, length : int = 0.0) : string\n	\n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic event ProgressEvent\n{\n    \n    etype Progress\n    \n    public readonly param bytesLoaded : double\n    \n    public readonly param bytesTotal : double\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic final native dynamic class Class < Object\n{\n    \n    public native prop name\n    {\n	    [get]\n    }\n\n    public native prop qualifiedName\n    {\n	    [get]\n    }\n\n    public native prop packageName\n    {\n	    [get]\n    }\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic native final class Regex < Object\n{\n    \n    public native prop pattern : String\n    {\n        [get]\n    }\n    \n    public native constructor(pattern : String)\n    \n    public native meth test(value : String)\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system\n\npublic native final class Dictionary < Object\n{\n    \n    public native prop size\n    {\n	    [get]\n    }\n    \n    public native constructor()\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system.network\n\nimport system\n\npublic final native class ServerSocket < Object\n{\n\n    public native prop bound : bool\n    {\n        [get]\n    }\n    \n    public native prop listening : bool\n    {\n        [get]\n    }\n    \n    public native constructor()\n    \n    public native meth bind(localPort : int, localAddress : String = \"0.0.0.0\")\n    \n    public native meth listen(backlog : int = 0)\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system.network\n\nimport system\n\npublic final native class Socket < Object\n{\n    \n    public native prop connected\n    {\n        [get]\n    }\n    \n    public native constructor()\n    \n    public native meth connect(url:Url|String)\n    \n    public native meth close()\n    \n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system.network\n\nimport system\n\npublic final native class Url < Object\n{\n\n	public native constructor(url : String|Url)\n	\n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system.io\n\nimport system\n\npublic final native class FileStream < Object\n{\n\n	public native prop isOpen\n	{\n		[get]\n	}\n\n	public native prop isEof\n	{\n		[get]\n	}\n\n	public native constructor()\n\n	public native meth open(path : string)\n\n	public native meth close()\n\n	public native meth read() : string\n\n	public native meth get() : char\n	\n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system.io\n\npublic event IOErrorEvent\n{\n\n}\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system.io\n\npublic native func read() : char\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system.io\n\npublic native func writeln(value : string)\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system.io\n\npublic native func readln() : *\n", "//\n//                 __  __            __           \n//                / / / /__  __ ____/ /_____ ____ \n//               / /_/ // / / // __  // ___// __ \\\n//              / __  // /_/ // /_/ // /   / /_/ /\n//             /_/ /_/ \\__, / \\__,_//_/    \\____/ \n//                    /____/                      \n//\n//              The Hydro Programming Language\n//\n\npackage system.io\n\npublic native func write(value : string)\n"};

const char **hydro_script_path = new const char*[42]{"/system/EventType.hydro", "/system/Json.hydro", "/system/Setter.hydro", "/system/Thread.hydro", "/system/eval.hydro", "/system/Element.hydro", "/system/Getter.hydro", "/system/print.hydro", "/system/Date.hydro", "/system/Constructor.hydro", "/system/Event.hydro", "/system/Error.hydro", "/system/Property.hydro", "/system/delay.hydro", "/system/EventTarget.hydro", "/system/Object.hydro", "/system/AppContext.hydro", "/system/Function.hydro", "/system/exit.hydro", "/system/cmd.hydro", "/system/newInstance.hydro", "/system/Action.hydro", "/system/RuntimeError.hydro", "/system/Enum.hydro", "/system/List.hydro", "/system/Method.hydro", "/system/Context.hydro", "/system/EventContext.hydro", "/system/String.hydro", "/system/ProgressEvent.hydro", "/system/Class.hydro", "/system/Regex.hydro", "/system/Dictionary.hydro", "/system/network/ServerSocket.hydro", "/system/network/Socket.hydro", "/system/network/Url.hydro", "/system/io/FileStream.hydro", "/system/io/IOErrorEvent.hydro", "/system/io/read.hydro", "/system/io/writeln.hydro", "/system/io/readln.hydro", "/system/io/write.hydro"};

const char **hydro_script_qname = new const char*[42]{"system/EventType", "system/Json", "system/Setter", "system/Thread", "system/eval", "system/Element", "system/Getter", "system/print", "system/Date", "system/Constructor", "system/Event", "system/Error", "system/Property", "system/delay", "system/EventTarget", "system/Object", "system/AppContext", "system/Function", "system/exit", "system/cmd", "system/newInstance", "system/Action", "system/RuntimeError", "system/Enum", "system/List", "system/Method", "system/Context", "system/EventContext", "system/String", "system/ProgressEvent", "system/Class", "system/Regex", "system/Dictionary", "system/network/ServerSocket", "system/network/Socket", "system/network/Url", "system/io/FileStream", "system/io/IOErrorEvent", "system/io/read", "system/io/writeln", "system/io/readln", "system/io/write"};

#endif /* HYDRO_NATIVE_LIB */

} // namespace hydro

